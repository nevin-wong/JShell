November 4 to November 10


User Stories from Product Backlog that we will address in this sprint:
j) As a user, I want the shell to print error messages whenever I cannot perform a desired task so I know what went wrong.
l) As a user, I want to be able to echo a string onto the shell.
m) As a user, I want to be able to echo a string overwriting file in storage, to write files quickly.
n) As a user, I want to be able to echo a string into the end of a file in storage, to append data to files quickly.
p) As a user, I want to be able to display the contents of a certain file in storage concatenated with another file.
q) As a user, I want to save the current directory by pushing it onto the directory stack.
r) As a user, I want to remove the top entry from the directory stack and make it the current directory.
s) As a user, I want to know the five most recent commands I have typed into the shell.

Specific tasks to be accomplished:
j-2: (PrintError) Write various error messages for all possible errors for all commands
j-4: (StorageUnit) Call the hasForbidChar method in StorageUnit before any file/directory is created to catch errors
l-2: (Echo) Test and use test cases to ensure full functionality of Echo-ing a string onto the shell
m-4: (Echo) Test and use test cases to ensure full functionality of Echo-ing a string into a newly created file in the current directory 
m-7: (Echo) Test and use test cases to ensure full functionality of Echo-ing a string to overwrite an existing file
n-3: (Echo) Test and use test cases to ensure full functionality og Echo-ing a string to append to a file
o-3: (ConcatenateFile) Test and use test cases to ensure full functionality of using Concatenate to print the contents of a specific file
p-2: (ConcatenateFile) Test and use test cases to ensure full functionality of using Concatenate to concatenating multiple files and printing them with two empty lines in between
q-1: (PushDirOntoStack) Write the CRC Card for PushDirOntoStack and edit JShell's card to keep track of a directory stack
q-2: (PushDirOntoStack) Write base code for PushDirOntoStack class
q-3: (JShell) Create another private variable of JShell, its directoryStack, and a getter and setter method for it
q-4: (PushDirOntoStack) Have PushDirOntoStack push a given directory onto a JShell's stack
q-5: (PushDirOntoStack) Use test cases to ensure full functionality of PushDirOntoStack
r-1: (PopDirFromStack) Write the CRC card for PopDirOntoStack
r-2: (PopDirFromStack) Write base code for PopDirOntoStack class
r-3: (PopDirFromStack) Have PopDirOntoStack be able to pop a JShell's directory stack's top entry and make it its current one
r-4: (PopDirFromStack) Use test cases to ensure full functionality of PopDirFromStack
s-1: (PrintHistory) Write the CRC Card for History and edit JShell's card to keep track of history
s-2: (PrintHistory) Write base code for History class
s-3: (JShell) Create another private variable for JShell, its history (perhaps an ArrayList), and a getter and setter method for it
s-4: (JShell) Whenever the user enters in a command, add this command to the end of this history variable
s-5: (PrintHistory) Have History be able to print out contents of JShell's history, numbered
s-6: (PrintHistory) Have History be able to print out a given number of contents of JShell's history, numbered
s-7: (PrintHistory) Use test cases to ensure full functionality of the history command


These tasks are assigned as follows:

User: Collin Chan
Tasks: o-3, p-2, s-1, s-2, s-3, s-4, s-5, s-6

User: Jeff He
Tasks: r-1, r-2, r-3, j-4

User: Nevin Wong
Tasks: j-2, q-1, q-2, q-3, q-4

User: David Huynh
Tasks: l-2, m-4, m-7, n-3, q-5, r-4, s-7
